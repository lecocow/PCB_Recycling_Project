import rclpy
from rclpy.node import Node
from geometry_msgs.msg import Twist
from pynput import keyboard

class KeyboardArmController(Node):
    def __init__(self):
        super().__init__('keyboard_arm_controller')

        # Publisher pour envoyer des commandes de mouvement
        self.publisher_ = self.create_publisher(Twist, '/cmd_vel_arm', 10)

        # Initialisation de la commande de mouvement
        self.twist = Twist()

        # Lancement du listener clavier dans un thread séparé
        self.listener = keyboard.Listener(on_press=self.on_key_press)
        self.listener.start()

        self.get_logger().info("Contrôle du bras robot avec le clavier initialisé.")

    def on_key_press(self, key):
        try:
            # Réinitialisation des commandes
            self.twist.linear.x = 0.0
            self.twist.linear.y = 0.0
            self.twist.linear.z = 0.0

            # Touches directionnelles
            if key == keyboard.Key.up:
                self.twist.linear.y = 1.0
            elif key == keyboard.Key.down:
                self.twist.linear.y = -1.0
            elif key == keyboard.Key.left:
                self.twist.linear.x = -1.0
            elif key == keyboard.Key.right:
                self.twist.linear.x = 1.0
            # Pavé numérique +/-
            elif key.char == '+':
                self.twist.linear.z = 1.0
            elif key.char == '-':
                self.twist.linear.z = -1.0
            else:
                return  # Ignorer les autres touches

            # Publier le message
            self.publisher_.publish(self.twist)
            self.get_logger().info(f"Mouvement envoyé: x={self.twist.linear.x}, y={self.twist.linear.y}, z={self.twist.linear.z}")

        except AttributeError:
            pass  # Certaines touches spéciales n'ont pas de .char

def main(args=None):
    rclpy.init(args=args)
    node = KeyboardArmController()
    try:
        rclpy.spin(node)
    except KeyboardInterrupt:
        node.get_logger().info('Arrêt du contrôle clavier.')
    finally:
        node.listener.stop()
        node.destroy_node()
        rclpy.shutdown()
